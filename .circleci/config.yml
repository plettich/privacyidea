version: 2.1

jobs:
  test_generic:
    description: Run all tests with the latest packages
    docker:
      # in the long run we could use matrix tests here for multiple python versions
      - image: cimg/python:3.6
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - run: mkdir -p test-results/generic
      # We do not want any caching (always the latest packages) therefore we
      # install the packages directly (not using the python orb)
      - run: pip install pytest pytest-cov mock responses testfixtures
      - run: pip install -e .
      - run: pip freeze > test-results/generic/packages.txt
      - run:
          command: |
            python -b -m pytest --cov=privacyidea --junit-xml=test-results/generic/results.xml tests/
          name: Test generic
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results/generic

  test_mysql:
    description: Run all tests with MySQL database backend
    docker:
      - image: cimg/python:3.6
        environment:
          TEST_DATABASE_URL: mysql+pymysql://pi:test123@localhost/pi
      - image: circleci/mysql:latest-ram
        environment:
          MYSQL_DATABASE: pi
          MYSQL_USER: pi
          MYSQL_PASSWORD: test123
          MYSQL_RANDOM_ROOT_PASSWORD: yes
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - run:
          name: Check for changes
          command: |
            if [[ -z $(git log --since=1.day) ]] ; then
              curl --request POST \
                   --url https://circleci.com/api/v2/workflow/${CIRCLE_WORKFLOW_ID}/cancel \
                   --header "Circle-Token: ${CIRCLE_TOKEN}"
            fi
      - run: pip install -r tests/requirements.txt
      - run: mkdir -p test-results/mysql
      - run:
          command: |
            python -b -m pytest --cov=privacyidea --junit-xml=test-results/mysql/results.xml tests/
          name: MySQL Test
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results/mysql

workflows:
  version: 2
  nightly:
    triggers:
      - schedule:
          # Start the nightly test at 5:00 UTC only on branch "master"
          cron: "40 14 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
#      - test_generic
      - test_mysql
